[
    {
        "id": "df1af71b9c007b40",
        "type": "tab",
        "label": "Emotion-Detection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "69c16492c2f17296",
        "type": "mqtt in",
        "z": "df1af71b9c007b40",
        "name": "",
        "topic": "ezan/emotion_detection",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c51d12a277fb316d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "c6fae4704a3f346f"
            ]
        ]
    },
    {
        "id": "5182814763162ded",
        "type": "debug",
        "z": "df1af71b9c007b40",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 300,
        "wires": []
    },
    {
        "id": "3182d0e22efc27f8",
        "type": "influxdb out",
        "z": "df1af71b9c007b40",
        "influxdb": "2ff2a476.a6d2ec",
        "name": "Emotion Database",
        "measurement": "emotion",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ezan-organization",
        "bucket": "ed-bucket",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "c6fae4704a3f346f",
        "type": "function",
        "z": "df1af71b9c007b40",
        "name": "Generate Payload",
        "func": "// Extract the emotion from the MQTT payload\nvar emotion = msg.payload.split(\":\")[1].trim();\n\n// Map emotions to emojis\nvar emojiMap = {\n    \"neutral\": \"üòê\",\n    \"happy\": \"üòä\",\n    \"sad\": \"üò¢\",\n    \"angry\": \"üò°\",\n    \"surprised\": \"üò≤\",\n    \"fearful\": \"üò®\"\n};\n\n// Get the corresponding emoji\nvar emoji = emojiMap[emotion] || \"‚ùì\";  // Default to a question mark if emotion not found\n\n// Create a structured payload for InfluxDB\nmsg.payload =\n    {\n        emotion: emotion,  // Original emotion text\n        emoji: emoji,       // Corresponding emoji\n        source: \"OpenMV\",  // Example tag\n        timestamp: new Date().toISOString()  // Optional: Add a timestamp\n    }\n;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "3182d0e22efc27f8",
                "5182814763162ded"
            ]
        ]
    },
    {
        "id": "c51d12a277fb316d",
        "type": "mqtt-broker",
        "name": "Lab",
        "broker": "193.205.194.147",
        "port": "10883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2ff2a476.a6d2ec",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "Influx-ezan-db",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": "",
        "rejectUnauthorized": false
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    }
]